from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['BalsaDeformable'].rootAssembly.deleteFeatures(('TopRig-1', 
    'Parallel Face-1'))
mdb.models['BalsaDeformable'].parts['Part-1'].DatumPlaneByPrincipalPlane(
    offset=0.0, principalPlane=YZPLANE)
mdb.models['BalsaDeformable'].parts['Part-1'].PartitionCellByDatumPlane(cells=
    mdb.models['BalsaDeformable'].parts['Part-1'].cells.getSequenceFromMask((
    '[#1 ]', ), ), datumPlane=
    mdb.models['BalsaDeformable'].parts['Part-1'].datums[2])
mdb.models['BalsaDeformable'].parts['Part-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['BalsaDeformable'].parts['Part-1'].cells.getSequenceFromMask(
    mask=('[#3 ]', ), )), sectionName='Steel', thicknessAssignment=
    FROM_SECTION)
mdb.models['BalsaDeformable'].parts['Part-1'].setMeshControls(elemShape=WEDGE, 
    regions=
    mdb.models['BalsaDeformable'].parts['Part-1'].cells.getSequenceFromMask((
    '[#3 ]', ), ), technique=SWEEP)
mdb.models['BalsaDeformable'].parts['Part-1'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.45)
mdb.models['BalsaDeformable'].parts['Part-1'].generateMesh()
# Save by Matt on 2023_07_21-11.25.27; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['BalsaDeformable'].parts['TopRig']
mdb.models['BalsaDeformable'].parts.changeKey(fromName='Part-1', toName=
    'TopRig')
# Save by Matt on 2023_07_21-11.25.59; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['BalsaDeformable'].rootAssembly.Instance(dependent=ON, name=
    'TopRig-1', part=mdb.models['BalsaDeformable'].parts['TopRig'])
mdb.models['BalsaDeformable'].rootAssembly.FaceToFace(clearance=0.0, 
    fixedPlane=
    mdb.models['BalsaDeformable'].rootAssembly.instances['Core-1'].faces[10], 
    flip=OFF, movablePlane=
    mdb.models['BalsaDeformable'].rootAssembly.instances['TopRig-1'].faces[3])
mdb.models['BalsaDeformable'].rootAssembly.translate(instanceList=('TopRig-1', 
    ), vector=(0.0, 2.614459, 2.651015))
# Save by Matt on 2023_07_21-11.26.54; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['BalsaDeformable'].interactions['TopRigTopLam']
mdb.models['BalsaDeformable'].SurfaceToSurfaceContactStd(adjustMethod=NONE, 
    clearanceRegion=None, createStepName='Step-1', datumAxis=None, 
    initialClearance=OMIT, interactionProperty='IntProp-1', main=Region(
    side1Faces=mdb.models['BalsaDeformable'].rootAssembly.instances['topLam-1'].faces.getSequenceFromMask(
    mask=('[#100 ]', ), )), name='TopRigTopLam', secondary=Region(
    side1Faces=mdb.models['BalsaDeformable'].rootAssembly.instances['TopRig-1'].faces.getSequenceFromMask(
    mask=('[#90 ]', ), )), sliding=FINITE, thickness=ON)
# Save by Matt on 2023_07_21-11.27.51; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['BalsaDeformable'].boundaryConditions['TopDispl']
mdb.models['BalsaDeformable'].DisplacementBC(amplitude=UNSET, createStepName=
    'Step-1', distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None
    , name='TopDispl', region=Region(
    edges=mdb.models['BalsaDeformable'].rootAssembly.instances['TopRig-1'].edges.getSequenceFromMask(
    mask=('[#1 ]', ), )), u1=0.0, u2=-1.0, u3=0.0, ur1=0.0, ur2=0.0, ur3=0.0)
# Save by Matt on 2023_07_21-11.28.30; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.jobs['BalsaDeformableTest']
# Save by Matt on 2023_07_21-11.28.40; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='BalsaDeformable', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='BalsaDeformableTest', 
    nodalOutputPrecision=SINGLE, numCpus=1, numGPUs=0, numThreadsPerMpiProcess=
    1, queue=None, resultsFormat=ODB, scratch='', type=ANALYSIS, 
    userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['BalsaDeformableTest'].submit(consistencyChecking=OFF)
# Save by Matt on 2023_07_21-11.34.50; build 2022 2021_09_15-10.57.30 176069
# Save by Matt on 2023_07_21-11.40.30; build 2022 2021_09_15-10.57.30 176069
# Save by Matt on 2023_07_21-11.44.15; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['BalsaDeformable'].materials['EPS Foam'].elastic.setValues(table=((
    350.0, 0.2), ))
# Save by Matt on 2023_07_21-11.45.18; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.jobs['BalsaDeformableTest']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='BalsaDeformable', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='BalsaDeformableTest', 
    nodalOutputPrecision=SINGLE, numCpus=1, numGPUs=0, numThreadsPerMpiProcess=
    1, queue=None, resultsFormat=ODB, scratch='', type=ANALYSIS, 
    userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['BalsaDeformableTest'].submit(consistencyChecking=OFF)
# Save by Matt on 2023_07_21-12.08.18; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['BalsaDeformable'].materials['EPS Foam'].elastic.setValues(table=((
    3500.0, 0.2), ))
mdb.models['BalsaDeformable'].materials['Balsa'].elastic.setValues(table=((
    100000.0, 0.3), ))
del mdb.jobs['BalsaDeformableTest']
# Save by Matt on 2023_07_21-12.09.40; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='BalsaDeformable', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='BalsaDeformableTest', 
    nodalOutputPrecision=SINGLE, numCpus=1, numGPUs=0, numThreadsPerMpiProcess=
    1, queue=None, resultsFormat=ODB, scratch='', type=ANALYSIS, 
    userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['BalsaDeformableTest'].submit(consistencyChecking=OFF)
# Save by Matt on 2023_07_21-12.22.59; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['BalsaDeformable'].boundaryConditions['TopDispl'].setValues(u2=-0.5)
mdb.models['BalsaDeformable'].materials['Fiberglass4oz'].elastic.setValues(
    table=((5000000.0, 5000000.0, 7500.0, 0.25, 0.4, 0.4, 500000.0, 500000.0, 
    500000.0), ))
mdb.models['BalsaDeformable'].materials['Fiberglass6oz'].elastic.setValues(
    table=((7000000.0, 7000000.0, 9000.0, 0.25, 0.3, 0.4, 750000.0, 750000.0, 
    750000.0), ))
# Save by Matt on 2023_07_21-12.25.09; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.jobs['BalsaDeformableTest']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='BalsaDeformable', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='BalsaDeformableTest', 
    nodalOutputPrecision=SINGLE, numCpus=1, numGPUs=0, numThreadsPerMpiProcess=
    1, queue=None, resultsFormat=ODB, scratch='', type=ANALYSIS, 
    userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['BalsaDeformableTest'].submit(consistencyChecking=OFF)
mdb.models['BalsaDeformable'].materials['Fiberglass6oz'].elastic.setValues(
    table=((7000000.0, 7000000.0, 4500.0, 0.25, 0.3, 0.4, 750000.0, 750000.0, 
    750000.0), ))
mdb.models['BalsaDeformable'].materials['Fiberglass4oz'].elastic.setValues(
    table=((5000000.0, 5000000.0, 3750.0, 0.25, 0.4, 0.4, 500000.0, 500000.0, 
    500000.0), ))
# Save by Matt on 2023_07_21-12.33.49; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.jobs['BalsaDeformableTest']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='BalsaDeformable', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='BalsaDeformableTest', 
    nodalOutputPrecision=SINGLE, numCpus=1, numGPUs=0, numThreadsPerMpiProcess=
    1, queue=None, resultsFormat=ODB, scratch='', type=ANALYSIS, 
    userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['BalsaDeformableTest'].submit(consistencyChecking=OFF)
mdb.models['BalsaDeformable'].materials['Fiberglass4oz'].elastic.setValues(
    table=((500000.0, 500000.0, 3750.0, 0.25, 0.4, 0.4, 500000.0, 500000.0, 
    500000.0), ))
mdb.models['BalsaDeformable'].materials['Fiberglass6oz'].elastic.setValues(
    table=((700000.0, 700000.0, 4500.0, 0.25, 0.3, 0.4, 750000.0, 750000.0, 
    750000.0), ))
# Save by Matt on 2023_07_21-12.41.21; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.jobs['BalsaDeformableTest']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='BalsaDeformable', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='BalsaDeformableTest', 
    nodalOutputPrecision=SINGLE, numCpus=1, numGPUs=0, numThreadsPerMpiProcess=
    1, queue=None, resultsFormat=ODB, scratch='', type=ANALYSIS, 
    userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['BalsaDeformableTest'].submit(consistencyChecking=OFF)
# Save by Matt on 2023_07_21-12.48.33; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['BalsaDeformable'].historyOutputRequests['ForceDispl']
mdb.models['BalsaDeformable'].rootAssembly.Set(edges=
    mdb.models['BalsaDeformable'].rootAssembly.instances['TopRig-1'].edges.getSequenceFromMask(
    ('[#1 ]', ), ), faces=
    mdb.models['BalsaDeformable'].rootAssembly.instances['BottomSupport-1'].faces.getSequenceFromMask(
    mask=('[#44 ]', ), )+\
    mdb.models['BalsaDeformable'].rootAssembly.instances['BottomSupport-2'].faces.getSequenceFromMask(
    mask=('[#44 ]', ), ), name='ForceDispl')
del mdb.jobs['BalsaDeformableTest']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='BalsaDeformable', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='BalsaDeformableTest', 
    nodalOutputPrecision=SINGLE, numCpus=1, numGPUs=0, numThreadsPerMpiProcess=
    1, queue=None, resultsFormat=ODB, scratch='', type=ANALYSIS, 
    userSubroutine='', waitHours=0, waitMinutes=0)
mdb.models['BalsaDeformable'].HistoryOutputRequest(createStepName='Step-1', 
    name='ForceDispl', rebar=EXCLUDE, region=
    mdb.models['BalsaDeformable'].rootAssembly.sets['ForceDispl'], 
    sectionPoints=DEFAULT, variables=('RF2', 'U2'))
# Save by Matt on 2023_07_21-12.52.17; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['BalsaDeformableTest'].submit(consistencyChecking=OFF)
# Save by Matt on 2023_07_21-13.02.16; build 2022 2021_09_15-10.57.30 176069
# Save by Matt on 2023_07_21-13.15.48; build 2022 2021_09_15-10.57.30 176069
# Save by Matt on 2023_07_21-13.15.48; build 2022 2021_09_15-10.57.30 176069
# Save by Matt on 2023_07_21-13.15.48; build 2022 2021_09_15-10.57.30 176069
# Save by Matt on 2023_07_21-13.15.48; build 2022 2021_09_15-10.57.30 176069
# Save by Matt on 2023_07_21-13.15.49; build 2022 2021_09_15-10.57.30 176069
# Save by Matt on 2023_07_21-13.15.49; build 2022 2021_09_15-10.57.30 176069
# Save by Matt on 2023_07_21-13.15.49; build 2022 2021_09_15-10.57.30 176069
# Save by Matt on 2023_07_21-13.39.37; build 2022 2021_09_15-10.57.30 176069
# Save by Matt on 2023_07_22-12.07.30; build 2022 2021_09_15-10.57.30 176069
# Save by Matt on 2023_07_22-12.07.41; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['BalsaDeformableTest'].submit(consistencyChecking=OFF)
# Save by Matt on 2023_07_22-12.10.31; build 2022 2021_09_15-10.57.30 176069
# Save by Matt on 2023_07_22-12.13.39; build 2022 2021_09_15-10.57.30 176069
# Save by Matt on 2023_07_22-12.13.39; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['BalsaFineMesh']
del mdb.models['Balsa']
# Save by Matt on 2023_07_22-12.17.04; build 2022 2021_09_15-10.57.30 176069
# Save by Matt on 2023_07_22-12.17.15; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models.changeKey(fromName='BalsaDeformable', toName='Balsa')
# Save by Matt on 2023_07_22-12.17.23; build 2022 2021_09_15-10.57.30 176069
# Save by Matt on 2023_07_22-12.17.32; build 2022 2021_09_15-10.57.30 176069
# Save by Matt on 2023_07_22-12.17.33; build 2022 2021_09_15-10.57.30 176069
# Save by Matt on 2023_07_22-12.17.33; build 2022 2021_09_15-10.57.30 176069
# Save by Matt on 2023_07_22-12.17.33; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.jobs['BalsaTest']
mdb.jobs.changeKey(fromName='BalsaDeformableTest', toName='BalsaTest')
#* Jobs which are in process cannot be renamed.
del mdb.jobs['BalsaDeformableTest']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Balsa', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='BalsaTest', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, numThreadsPerMpiProcess=1, queue=None, resultsFormat=
    ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=0, 
    waitMinutes=0)
del mdb.jobs['CarbonTest']
# Save by Matt on 2023_07_22-12.19.00; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Carbon']
# Save by Matt on 2023_07_22-12.19.09; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.Model(name='StiffFoam', objectToCopy=mdb.models['Balsa'])
mdb.models['StiffFoam'].parts['Core'].deleteFeatures(('Datum plane-1', 
    'Datum plane-2', 'Partition cell-1', 'Partition cell-2'))
# Save by Matt on 2023_07_22-12.20.30; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['StiffFoam'].parts['Core'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['StiffFoam'].parts['Core'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), sectionName='EPS Foam', thicknessAssignment=
    FROM_SECTION)
mdb.models.changeKey(fromName='StiffFoam', toName='JustFoam')
mdb.models['JustFoam'].rootAssembly.regenerate()
del mdb.models['JustFoam'].constraints['Constraint-1']
del mdb.models['JustFoam'].constraints['Constraint-2']
mdb.models['JustFoam'].Tie(adjust=ON, main=Region(
    side1Faces=mdb.models['JustFoam'].rootAssembly.instances['topLam-1'].faces.getSequenceFromMask(
    mask=('[#40 ]', ), )), name='TopLamCore', positionToleranceMethod=COMPUTED, 
    secondary=Region(
    side1Faces=mdb.models['JustFoam'].rootAssembly.instances['Core-1'].faces.getSequenceFromMask(
    mask=('[#8 ]', ), )), thickness=ON, tieRotations=ON)
mdb.models['JustFoam'].Tie(adjust=ON, main=Region(
    side1Faces=mdb.models['JustFoam'].rootAssembly.instances['botLam-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )), name='BotLamCore', positionToleranceMethod=COMPUTED, 
    secondary=Region(
    side1Faces=mdb.models['JustFoam'].rootAssembly.instances['Core-1'].faces.getSequenceFromMask(
    mask=('[#2 ]', ), )), thickness=ON, tieRotations=ON)
# Save by Matt on 2023_07_22-12.23.12; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='JustFoam', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='JustFoamTest', nodalOutputPrecision=
    SINGLE, numCpus=1, numGPUs=0, numThreadsPerMpiProcess=1, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.models['JustFoam'].parts['Core'].generateMesh()
# Save by Matt on 2023_07_22-12.24.18; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['JustFoam'].rootAssembly.regenerate()
mdb.jobs['JustFoamTest'].submit(consistencyChecking=OFF)
# Save by Matt on 2023_07_22-12.29.07; build 2022 2021_09_15-10.57.30 176069
# Save by Matt on 2023_07_22-12.29.08; build 2022 2021_09_15-10.57.30 176069
# Save by Matt on 2023_07_22-12.31.37; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.Model(name='10xStiffFoam', objectToCopy=mdb.models['JustFoam'])
mdb.models['10xStiffFoam'].materials['EPS Foam'].elastic.setValues(table=((
    35000.0, 0.2), ))
# Save by Matt on 2023_07_22-12.32.44; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='10xStiffFoam', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='10xStiffFoamTest', nodalOutputPrecision=
    SINGLE, numCpus=1, numGPUs=0, numThreadsPerMpiProcess=1, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.jobs['10xStiffFoamTest'].submit(consistencyChecking=OFF)
mdb.Model(name='FoamasHoneycomb', objectToCopy=mdb.models['10xStiffFoam'])
mdb.models['FoamasHoneycomb'].materials['EPS Foam'].elastic.setValues(table=((
    35000.0, 100000.0, 35000.0, 0.2, 0.2, 0.2, 0.0, 0.0, 0.0), ), type=
    ENGINEERING_CONSTANTS)
# Save by Matt on 2023_07_22-12.59.57; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['FoamasHoneycomb'].parts['Core'].DatumCsysByThreePoints(
    coordSysType=CARTESIAN, line1=(1.0, 0.0, 0.0), line2=(0.0, 1.0, 0.0), name=
    'Datum csys-1', origin=
    mdb.models['FoamasHoneycomb'].parts['Core'].InterestingPoint(
    mdb.models['FoamasHoneycomb'].parts['Core'].edges[4], MIDDLE))
mdb.models['FoamasHoneycomb'].parts['Core'].MaterialOrientation(
    additionalRotationField='', additionalRotationType=ROTATION_NONE, angle=0.0
    , axis=AXIS_3, fieldName='', localCsys=
    mdb.models['FoamasHoneycomb'].parts['Core'].datums[11], orientationType=
    SYSTEM, region=Region(
    cells=mdb.models['FoamasHoneycomb'].parts['Core'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), stackDirection=STACK_3)
# Save by Matt on 2023_07_22-13.01.33; build 2022 2021_09_15-10.57.30 176069
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['FoamasHoneycomb'].rootAssembly.regenerate()
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='FoamasHoneycomb', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='FoamasHoneyCombTest', 
    nodalOutputPrecision=SINGLE, numCpus=1, numGPUs=0, numThreadsPerMpiProcess=
    1, queue=None, resultsFormat=ODB, scratch='', type=ANALYSIS, 
    userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['FoamasHoneyCombTest'].submit(consistencyChecking=OFF)
mdb.models['FoamasHoneycomb'].materials['EPS Foam'].elastic.setValues(table=((
    35000.0, 100000.0, 35000.0, 0.2, 0.2, 0.2, 10000.0, 10000.0, 10000.0), ))
del mdb.jobs['FoamasHoneyCombTest']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='FoamasHoneycomb', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='FoamHoneycombTest', 
    nodalOutputPrecision=SINGLE, numCpus=1, numGPUs=0, numThreadsPerMpiProcess=
    1, queue=None, resultsFormat=ODB, scratch='', type=ANALYSIS, 
    userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['FoamHoneycombTest'].submit(consistencyChecking=OFF)
mdb.models['FoamasHoneycomb'].materials['EPS Foam'].elastic.setValues(table=((
    35000.0, 100000.0, 35000.0, 0.2, 0.2, 0.2, 1000000.0, 10000.0, 10000.0), ))
# Save by Matt on 2023_07_22-13.11.23; build 2022 2021_09_15-10.57.30 176069
